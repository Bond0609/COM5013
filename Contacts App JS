const contactForm = document.getElementById("contactForm");
const nameInput = document.getElementById("name");
const phoneInput = document.getElementById("phone");
const addressInput = document.getElementById("address");
const searchInput = document.getElementById("search");
const contactsList = document.getElementById("contacts");

// Load contacts from localStorage
function loadContacts() {
  const contacts = JSON.parse(localStorage.getItem("contacts")) || [];
  return contacts.sort((a, b) => a.name.localeCompare(b.name)); // Ensure contacts are sorted
}


// Save contacts to localStorage
function saveContacts(contacts) {
  contacts.sort((a, b) => a.name.localeCompare(b.name)); // Sort before saving
  localStorage.setItem("contacts", JSON.stringify(contacts));
}

//Shows contacts to the UI
function renderContacts(contacts) {
  contactsList.innerHTML = "";
  contacts.forEach(contact => {
    const li = document.createElement("li");
    li.innerHTML = `
      <div>
        <span><strong>Name:</strong> ${contact.name}</span>
        <span><strong>Phone:</strong> ${contact.phone}</span>
        <span><strong>Address:</strong> ${contact.address}</span>
      </div>
      <button onclick="deleteContact('${contact.name}')">Delete</button>
    `;
    contactsList.appendChild(li);
  });
}

// Add new contact
function addContact(event) {
  event.preventDefault();
  const name = nameInput.value.trim();
  const phone = phoneInput.value.trim();
  const address = addressInput.value.trim();

  if (name && phone && address) {
    const contacts = loadContacts();
    contacts.push({ name, phone, address });
    saveContacts(contacts);
    renderContacts(contacts);
    contactForm.reset();
  } else {
    alert("Please fill out all fields.");
  }
}

// Delete contact
function deleteContact(nameToDelete) {
  const contacts = loadContacts();
  const updatedContacts = contacts.filter(contact => contact.name !== nameToDelete);
  saveContacts(updatedContacts);
  renderContacts(updatedContacts);
}

// Binary Search 
function binarySearch(contacts, query) {
  let left = 0;
  let right = contacts.length - 1;

  while (left <= right) {
    const mid = Math.floor((left + right) / 2);
    const midName = contacts[mid].name.toLowerCase();

    if (midName === query) {
      return [contacts[mid]]; // EXACT match found
    } else if (midName < query) {
      left = mid + 1; // Search in the right half
    } else {
      right = mid - 1; // Search in the left half
    }
  }
  return []; // If no match found
}

// Search contacts using Binary Search
function searchContacts(event) {
  const query = event.target.value.trim().toLowerCase();
  const contacts = loadContacts();
  
  if (query === "") {
    renderContacts(contacts); // Shows all contacts if the search box is empty
  } else {
    const result = binarySearch(contacts, query);
    renderContacts(result);
  }
}

// General Search Function
function searchContacts(event) {
  const query = event.target.value.trim().toLowerCase();
  const contacts = loadContacts();

  if (query === "") {
    renderContacts(contacts); // Show all contacts if the search box is empty
  } else {
    const result = contacts.filter(contact => 
      contact.name.toLowerCase().includes(query) || 
      contact.phone.toLowerCase().includes(query) || 
      contact.address.toLowerCase().includes(query)
    );
    renderContacts(result);
  }
}

// Event listeners
contactForm.addEventListener("submit", addContact);
searchInput.addEventListener("input", searchContacts);

renderContacts(loadContacts());


// Event listeners

contactForm.addEventListener("submit", addContact);
searchInput.addEventListener("input", searchContacts);

renderContacts(loadContacts());
